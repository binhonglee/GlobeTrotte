import{Z as e,aX as a,aY as t,aZ as u,a_ as r}from"./index.19144aa1.js";function c(){const i=e(a,null);return i===null&&t("use-dialog","No outer <n-dialog-provider /> founded."),i}function l(){const i=e(u,null);return i===null&&t("use-message","No outer <n-message-provider /> founded. See prerequisite in https://www.naiveui.com/en-US/os-theme/components/message for more details. If you want to use `useMessage` outside setup, please check https://www.naiveui.com/zh-CN/os-theme/components/message#Q-&-A."),i}function h(){const i=e(r,null);return i===null&&t("use-notification","No outer `n-notification-provider` found."),i}class f{static shouldRun(){return!0}static init(){this.shouldRun()&&(this.dialog=c(),this.message=l(),this.notify=h())}static dialogError(s){this.shouldRun()?this.dialog.error(s):s.onPositiveClick!==void 0&&s.onPositiveClick(new MouseEvent("click"))}static dialogWarning(s){this.shouldRun()?this.dialog.warning(s):s.onPositiveClick!==void 0&&s.onPositiveClick(new MouseEvent("click"))}static messageError(s){if(this.shouldRun())return this.message.error(s)}static messageInfo(s){if(this.shouldRun())return this.message.info(s)}static messageLoading(s){if(this.shouldRun())return this.message.loading(s)}static messageSuccess(s){if(this.shouldRun())return this.message.success(s)}static notifyTrigger(s,o,n){if(console.log(this.shouldRun()),console.log(this.notify),this.shouldRun())return this.notify[n]({content:s,meta:o})}}var d=(i=>(i.ERROR="error",i.INFO="info",i.WARNING="warning",i.SUCCESS="success",i))(d||{});export{f as N,d as a};
