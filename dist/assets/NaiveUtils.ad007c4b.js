var a=Object.defineProperty;var r=(i,s,e)=>s in i?a(i,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[s]=e;var t=(i,s,e)=>(r(i,typeof s!="symbol"?s+"":s,e),e);import{Z as n,b1 as c,b2 as u,b3 as l,b4 as d}from"./index.2ee84990.js";function f(){const i=n(c,null);return i===null&&u("use-dialog","No outer <n-dialog-provider /> founded."),i}function h(){const i=n(l,null);return i===null&&u("use-message","No outer <n-message-provider /> founded. See prerequisite in https://www.naiveui.com/en-US/os-theme/components/message for more details. If you want to use `useMessage` outside setup, please check https://www.naiveui.com/zh-CN/os-theme/components/message#Q-&-A."),i}function g(){const i=n(d,null);return i===null&&u("use-notification","No outer `n-notification-provider` found."),i}class o{static shouldRun(){return!0}static init(){this.shouldRun()&&(this.dialog=f(),this.message=h(),this.notify=g())}static dialogWarning(s){this.shouldRun()?this.dialog.warning(s):s.onPositiveClick!==void 0&&s.onPositiveClick(new MouseEvent("click"))}static messageError(s){if(this.shouldRun())return this.message.error(s)}static messageInfo(s){if(this.shouldRun())return this.message.info(s)}static messageLoading(s){if(this.shouldRun())return this.message.loading(s)}static messageSuccess(s){if(this.shouldRun())return this.message.success(s)}static notification(s){if(this.shouldRun())return this.notify.info(s)}}t(o,"dialog"),t(o,"message"),t(o,"notify");export{o as N};
