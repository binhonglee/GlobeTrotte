import{inject as e}from"vue";import{ap as a,aq as t,ar as r,as as u}from"./index.18ba2282.js";function c(){const s=e(a,null);return s===null&&t("use-dialog","No outer <n-dialog-provider /> founded."),s}function l(){const s=e(r,null);return s===null&&t("use-message","No outer <n-message-provider /> founded. See prerequisite in https://www.naiveui.com/en-US/os-theme/components/message for more details. If you want to use `useMessage` outside setup, please check https://www.naiveui.com/zh-CN/os-theme/components/message#Q-&-A."),s}function h(){const s=e(u,null);return s===null&&t("use-notification","No outer `n-notification-provider` found."),s}class m{static shouldRun(){return!0}static init(){this.shouldRun()&&(this.dialog=c(),this.message=l(),this.notify=h())}static dialogError(i){this.shouldRun()?this.dialog.error(i):i.onPositiveClick!==void 0&&i.onPositiveClick(new MouseEvent("click"))}static dialogWarning(i){this.shouldRun()?this.dialog.warning(i):i.onPositiveClick!==void 0&&i.onPositiveClick(new MouseEvent("click"))}static messageError(i){if(this.shouldRun())return this.message.error(i)}static messageInfo(i){if(this.shouldRun())return this.message.info(i)}static messageLoading(i){if(this.shouldRun())return this.message.loading(i)}static messageSuccess(i){if(this.shouldRun())return this.message.success(i)}static notifyTrigger(i,o,n){if(console.log(this.shouldRun()),console.log(this.notify),this.shouldRun())return this.notify[n]({content:i,meta:o})}}var d=(s=>(s.ERROR="error",s.INFO="info",s.WARNING="warning",s.SUCCESS="success",s))(d||{});export{m as N,d as a};
