import{Z as s,b3 as o,b4 as t,b5 as n,b6 as u}from"./index.9c2e7519.js";function a(){const e=s(o,null);return e===null&&t("use-dialog","No outer <n-dialog-provider /> founded."),e}function r(){const e=s(n,null);return e===null&&t("use-message","No outer <n-message-provider /> founded. See prerequisite in https://www.naiveui.com/en-US/os-theme/components/message for more details. If you want to use `useMessage` outside setup, please check https://www.naiveui.com/zh-CN/os-theme/components/message#Q-&-A."),e}function c(){const e=s(u,null);return e===null&&t("use-notification","No outer `n-notification-provider` found."),e}class d{static shouldRun(){return!0}static init(){this.shouldRun()&&(this.dialog=a(),this.message=r(),this.notify=c())}static dialogWarning(i){this.shouldRun()?this.dialog.warning(i):i.onPositiveClick!==void 0&&i.onPositiveClick(new MouseEvent("click"))}static dialogError(i){this.shouldRun()?this.dialog.error(i):i.onPositiveClick!==void 0&&i.onPositiveClick(new MouseEvent("click"))}static messageError(i){if(this.shouldRun())return this.message.error(i)}static messageInfo(i){if(this.shouldRun())return this.message.info(i)}static messageLoading(i){if(this.shouldRun())return this.message.loading(i)}static messageSuccess(i){if(this.shouldRun())return this.message.success(i)}}export{d as N};
