subinclude("//build_defs/npm")

def jest_dir(
  name:str,
  srcs:list=[],
  deps:list=[],
  visibility:list=[],
):
  return build_rule(
    name = name,
    srcs = srcs,
    cmd = "zip -r " + name + ".jest_dir ./",
    outs = [name + ".jest_dir"],
    deps = deps,
    test_only = True,
    visibility = visibility
  )

def jest_test(
  name:str,
  src:str,
  jest_dirs:list=[],
  deps:list=[],
  visibility:list=[],
):
  pre_build = _set_node_modules()
  for jest_dir in jest_dirs:
    jest_dir_name = jest_dir.split(":")
    if len(name) < 2:
      temp = jest_dir.split("/")
      jest_dir_name = temp[len(temp) - 1]
    else:
      jest_dir_name = jest_dir_name[1]
    pre_build += " && unzip -o " + jest_dir_name + ".jest_dir"

  return build_rule(
    name = name,
    data = [src] + jest_dirs + deps,
    test_cmd = " ".join([
      pre_build,
      "&&",
      "$TOOL jest",
      "--maxConcurrency=1",
      "$PKG_DIR/" + src,
      "&&",
      "cp jest_coverage/test_results.xml test.results",
      "&&",
      "mv jest_coverage " + name + "_jest_coverage",
    ]),
    test_outputs = [name + "_jest_coverage"],
    test = True,
    test_only = True,
    visibility = visibility,
    test_tools = [CONFIG.NPX_TOOL]
  )
