
# DO NOT EDIT MANUALLY AS IT IS GENERATED AND WILL BE OVERWRITTEN.
#
# This file is generated based on the provided 'go mod graph'. You can run
# 'plz go_mod' to regenerate the file.
#
# Source: src/turbine/scripts/genBUILD.go

package(default_visibility = ["PUBLIC"])

go_module(
  name = "binhonglee_kdlgo",
  module = "github.com/binhonglee/kdlgo",
  version = "v0.0.0-20211115042352-099938a8d3fc",
  install = [
    ".",
  ],
)

go_module(
  name = "google_uuid",
  module = "github.com/google/uuid",
  version = "v1.3.0",
  install = [
    ".",
  ],
)

go_module(
  name = "gorilla_mux",
  module = "github.com/gorilla/mux",
  version = "v1.8.0",
  install = [
    ".",
  ],
)

go_module(
  name = "gorilla_securecookie",
  module = "github.com/gorilla/securecookie",
  version = "v1.1.1",
  install = [
    ".",
  ],
)

go_module(
  name = "gorilla_sessions",
  module = "github.com/gorilla/sessions",
  version = "v1.2.1",
  install = [
    ".",
  ],
  deps = [
    ":gorilla_securecookie",
  ],
)

go_module(
  name = "jackc_chunkreader_v2",
  module = "github.com/jackc/chunkreader/v2",
  version = "v2.0.1",
  install = [
    ".",
  ],
)

go_module(
  name = "jackc_pgconn",
  module = "github.com/jackc/pgconn",
  version = "v1.12.1",
  install = [
    ".",
    "internal/ctxwatch",
    "stmtcache",
  ],
  deps = [
    ":jackc_chunkreader_v2",
    ":jackc_pgio",
    ":jackc_pgpassfile",
    ":jackc_pgproto3_v2",
    ":jackc_pgservicefile",
    ":x_crypto",
    ":x_text",
  ],
)

go_module(
  name = "jackc_pgio",
  module = "github.com/jackc/pgio",
  version = "v1.0.0",
  install = [
    ".",
  ],
)

go_module(
  name = "jackc_pgpassfile",
  module = "github.com/jackc/pgpassfile",
  version = "v1.0.0",
  install = [
    ".",
  ],
)

go_module(
  name = "jackc_pgproto3_v2",
  module = "github.com/jackc/pgproto3/v2",
  version = "v2.3.0",
  install = [
    ".",
  ],
  deps = [
    ":jackc_chunkreader_v2",
    ":jackc_pgio",
  ],
)

go_module(
  name = "jackc_pgservicefile",
  module = "github.com/jackc/pgservicefile",
  version = "v0.0.0-20200714003250-2b9c44734f2b",
  install = [
    ".",
  ],
)

go_module(
  name = "jackc_pgtype",
  module = "github.com/jackc/pgtype",
  version = "v1.11.0",
  install = [
    ".",
  ],
  deps = [
    ":jackc_pgio",
  ],
)

go_module(
  name = "jackc_pgx_v4",
  module = "github.com/jackc/pgx/v4",
  version = "v4.16.1",
  install = [
    ".",
    "internal/sanitize",
    "pgxpool",
  ],
  deps = [
    ":jackc_chunkreader_v2",
    ":jackc_pgconn",
    ":jackc_pgio",
    ":jackc_pgpassfile",
    ":jackc_pgproto3_v2",
    ":jackc_pgservicefile",
    ":jackc_pgtype",
    ":jackc_puddle",
    ":x_crypto",
    ":x_text",
  ],
)

go_module(
  name = "jackc_puddle",
  module = "github.com/jackc/puddle",
  version = "v1.2.1",
  install = [
    ".",
  ],
)

go_module(
  name = "jordan-wright_email",
  module = "github.com/jordan-wright/email",
  version = "v4.0.1-0.20210109023952-943e75fe5223+incompatible",
  install = [
    ".",
  ],
)

go_module(
  name = "x_crypto",
  module = "golang.org/x/crypto",
  version = "v0.0.0-20220518034528-6f7dac969898",
  install = [
    "bcrypt",
    "blowfish",
    "pbkdf2",
  ],
)

go_module(
  name = "x_text",
  module = "golang.org/x/text",
  version = "v0.3.7",
  install = [
    "cases",
    "internal",
    "internal/language",
    "internal/language/compact",
    "internal/tag",
    "language",
    "runes",
    "secure/bidirule",
    "secure/precis",
    "transform",
    "unicode/bidi",
    "unicode/norm",
    "width",
  ],
)

go_module(
  name = "x_time",
  module = "golang.org/x/time",
  version = "v0.0.0-20220411224347-583f2d630306",
  install = [
    "rate",
  ],
)

go_module(
  name = "zcache",
  module = "zgo.at/zcache",
  version = "v1.1.0",
  install = [
    ".",
  ],
)
